<?xml version="1.0"?>
<doc>
    <assembly>
        "ScincFuncs"
    </assembly>
    <members>
        <member name="M:ScincFuncs.Tree.Search(System.String@)">
            <summary>
Search: Gets the stats tree for the current database
</summary>
            <param name="treestr">the stats tree returned</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Filt.Count">
            <summary>
Count: returns the current filter size
</summary>
            <returns>the current filter size</returns>
        </member>
        <member name="M:ScincFuncs.Eco.Base(System.String@)">
            <summary>
Base: Reclassifies all games in the current base by ECO code.
</summary>
            <param name="msgs">The messages returned</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Eco.Read(System.String)">
            <summary>
Read: Reads a book file for ECO classification.
</summary>
            <param name="econm">the ECO file name</param>
            <returns>returns the book size (number of positions)</returns>
        </member>
        <member name="M:ScincFuncs.ScidGame.Pgn(System.String@)">
            <summary>
Pgn: Returns the PGN representation of the game.
</summary>
            <param name="pgn">string that will hold the pgen representation</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.ScidGame.List(System.String@,System.UInt32,System.UInt32,System.String)">
            <summary>
List: Returns a portion of the game list according to the current filter.
Takes start and count, where start is in the range (1..FilterCount).
The next argument is the format string -- -- see index.cpp for details.,
</summary>
            <param name="glist">the game list returned</param>
            <param name="start">the gane number to start from</param>
            <param name="count">the number of games to get</param>
            <param name="formatStr">the format string</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.ScidGame.SetTag(System.String,System.String)">
            <summary>
SetTag: Set a standard tag for this game.
</summary>
            <param name="tag">Tag as a string, such as White</param>
            <param name="val">Value as a string</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.ScidGame.GetTag(System.String,System.String@)">
            <summary>
GetTag: Gets a tag for the active game given its name.
Valid names are:  Event, Site, Date, Round, White, Black, ECO, EDate
</summary>
            <param name="tag">Tag as a string, such as White</param>
            <param name="val">Value returned as a string</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.ScidGame.StripComments">
            <summary>
StripComments: Strips all comments from a game.
</summary>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.ScidGame.Save(System.UInt32)">
            <summary>
Save: Saves the current game. If the parameter is 0, a NEW
game is added; otherwise, that game number is REPLACED.
</summary>
            <param name="gnum">The game number</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.ScidGame.Load(System.UInt32)">
            <summary>
Load: Takes a game number and loads the game
</summary>
            <param name="gnum">The game number</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Clipbase.Clear">
            <summary>
Clear: Clears the clipbase by closing and recreating it.
</summary>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Base.Current">
            <summary>
Current: Returns the number of the current open database.
</summary>
            <returns>the number of the current open database</returns>
        </member>
        <member name="M:ScincFuncs.Base.CountFree">
            <summary>
CountFree: Return count of free base slots.
</summary>
            <returns>count of free base slots</returns>
        </member>
        <member name="M:ScincFuncs.Base.Import(System.Int32@,System.String@,System.String)">
            <summary>
Import: Imports games from a PGN file to the current base.
</summary>
            <param name="numgames">returns number of games imported</param>
            <param name="msgs">returns any PGN import errors or warnings</param>
            <param name="pgnfile">the PGN file to import</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Base.Create(System.String)">
            <summary>
Create: creates a new database give a string of folder with name
</summary>
            <param name="basenm">The name of the new database</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Base.InUse">
            <summary>
InUse: Returns 1 if the database slot is in use; 0 otherwise.
</summary>
            <returns>returns 1 if the database slot is in use; 0 otherwise.</returns>
        </member>
        <member name="M:ScincFuncs.Base.Getfilename(System.String@)">
            <summary>
Getfilename: get the name of the current database file.
  Returns "[empty]" for an empty base, "[clipbase]" for the clipbase.
</summary>
            <param name="name">The name variable passed by reference</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Base.NumGames">
            <summary>
NumGames: Takes optional database number and returns number of games.
</summary>
            <returns>returns number of games</returns>
        </member>
        <member name="M:ScincFuncs.Base.Isreadonly">
            <summary>
Isreadoonly: is the base read only
</summary>
            <returns>returns true if read only</returns>
        </member>
        <member name="M:ScincFuncs.Base.Close">
            <summary>
Close: Closes the current or specified database.
</summary>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Base.Open(System.String)">
            <summary>
Open: takes a database name and opens the database.
   If either the index file or game file cannot be opened for
   reading and writing, then the database is opened read-only
   and will not be alterable.
</summary>
            <param name="basenm">The name of the database</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="M:ScincFuncs.Base.Autoloadgame(System.Boolean,System.UInt32)">
            <summary>
Autoloadgame: Sets or returns the autoload number for the database - the game number to load.
</summary>
            <param name="getbase">Whether to get or set the database</param>
            <param name="basenum">The number to set</param>
            <returns>returns 0 if successful</returns>
        </member>
        <member name="T:ScincFuncs.Tree">
            <summary>
Class that hold functions relating to the stats tree
</summary>
        </member>
        <member name="T:ScincFuncs.Filt">
            <summary>
Class that hold functions relating to databse filter
</summary>
        </member>
        <member name="T:ScincFuncs.Eco">
            <summary>
Class that hold functions relating to the ECO book
</summary>
        </member>
        <member name="T:ScincFuncs.ScidGame">
            <summary>
Class that hold functions relating to games in a SCID clipbase
</summary>
        </member>
        <member name="T:ScincFuncs.Clipbase">
            <summary>
Class that hold functions relating to the SCID clipbase
</summary>
        </member>
        <member name="T:ScincFuncs.Base">
            <summary>
Class that hold functions relating to the SCID database 
</summary>
        </member>
    </members>
</doc>